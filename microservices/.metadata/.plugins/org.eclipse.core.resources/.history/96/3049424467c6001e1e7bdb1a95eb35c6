package com.example.productcart.controller;

import java.util.List;
import java.util.Optional;

import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.example.productcart.entity.CartEntity;
import com.example.productcart.repository.CartRepository;
import com.example.productcart.service.CartService;

@RestController
public class CartController {
	
		CartService cartService;
	
//		@GetMapping("/cart/{id}")
//		public Optional<CartEntity> getDataById(@PathVariable int id) {
//			Optional<CartEntity> data = cartService.getDataById(id);
//			return data;
//		}
		@PostMapping("/cart/post")
		public ResponseEntity<CartEntity> create(@RequestBody CartEntity prodEntity) {
			CartEntity pe=cartService.createProduct(prodEntity);
			return  ResponseEntity.status(HttpStatus.CREATED).body(pe);
			
		}
		
		@GetMapping("/getAll")
		public ResponseEntity<List< CartEntity>> getAllData() {
			List<CartEntity> ls=cartService.getAllData();
			return ResponseEntity.status(HttpStatus.FOUND).body(ls);
		}
		@GetMapping("/getById/{id}")
		public ResponseEntity<Optional<CartEntity>> getById(@PathVariable int id) {
			Optional<CartEntity> pe=cartService.getById(id);
			return ResponseEntity.status(HttpStatus.FOUND).body(pe);
		}
		@PutMapping("/update/{id}")
		public ResponseEntity<CartEntity> UpdateById(@PathVariable int id, @RequestBody CartEntity prodEntity) {
			CartEntity pe=cartService.UpdateById(id,prodEntity);
			return ResponseEntity.status(HttpStatus.OK).body(pe);
		}
		@DeleteMapping("/delete/{id}")
		public ResponseEntity<String> DeleteById(@PathVariable int id) {
			String pe=cartService.DeleteById(id);
			if(pe!=null) {
				return ResponseEntity.status(HttpStatus.OK).body(pe);
			}else {
				return ResponseEntity.status(HttpStatus.NOT_FOUND).body(null);
			}
		}
		
}